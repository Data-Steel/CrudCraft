/*
 * Copyright (c) 2025 CrudCraft contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package nl.datasteel.crudcraft.codegen.fileheader;

import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

/**
 * Base utilities for generating CrudCraft file headers.
 */
public abstract class AbstractFileHeader {

    /**
     * Marker indicating that the file was generated by CrudCraft.
     */
    public static final String MARKER_GENERATED = "@CrudCraft:generated";

    /**
     * Marker indicating that the file is editable.
     * This is used to differentiate between files that can be modified
     * and those that should not be edited manually.
     */
    public static final String MARKER_EDITABLE  = "@CrudCraft:editable";

    /**
     * Timestamp of when the file was generated, formatted in ISO 8601.
     * This is used to provide context about when the file was created.
     */
    protected static final String TIMESTAMP = ZonedDateTime.now()
            .format(DateTimeFormatter.ISO_OFFSET_DATE_TIME);

    /**
     * Version of CrudCraft used to generate the file.
     */
    protected static final String VERSION = resolveVersion();

    /**
     * Private constructor to prevent instantiation of this utility class.
     * This class is intended to be extended, not instantiated directly.
     */
    protected AbstractFileHeader() {
    }

    /**
     * Resolves the version of CrudCraft from the package metadata.
     * If the version cannot be determined, it returns "unknown".
     *
     * @return the version string or "unknown" if not available
     */
    private static String resolveVersion() {
        try {
            return AbstractFileHeader.class.getPackage().getImplementationVersion();
        } catch (Exception e) {
            return "unknown";
        }
    }

    /**
     * Generates a header for editable files in the specified layer.
     *
     * @param layerType the type of layer (e.g., "Controller", "Service")
     * @param modelClass the name of the model class
     * @param pkg the package name
     * @param generatorClass the name of the generator class
     * @return a formatted header string
     */
    protected static String editableHeader(
            String layerType,
            String modelClass,
            String pkg,
            String generatorClass
    ) {
        return editableHeader(layerType, modelClass, pkg, generatorClass,
                "", "");
    }

    /**
     * Generates a header for editable files in the specified layer with an extra paragraph.
     *
     * @param layerType the type of layer (e.g., "Controller", "Service")
     * @param modelClass the name of the model class
     * @param pkg the package name
     * @param generatorClass the name of the generator class
     * @param extraParagraph additional information to include in the header
     * @return a formatted header string
     */
    protected static String editableHeader(
            String layerType,
            String modelClass,
            String pkg,
            String generatorClass,
            String extraParagraph
    ) {
        return editableHeader(layerType, modelClass, pkg, generatorClass,
                extraParagraph, "");
    }

    /**
     * Generates a header for editable files in the specified layer
     * with an extra paragraph and features.
     *
     * @param layerType the type of layer (e.g., "Controller", "Service")
     * @param modelClass the name of the model class
     * @param pkg the package name
     * @param generatorClass the name of the generator class
     * @param extraParagraph additional information to include in the header
     * @param features features provided by CrudCraft for this layer
     * @return a formatted header string
     */
    protected static String editableHeader(
            String layerType,
            String modelClass,
            String pkg,
            String generatorClass,
            String extraParagraph,
            String features
    ) {
        String extra = (extraParagraph == null || extraParagraph.isBlank())
                ? ""
                : extraParagraph + "\n\n";
        String feat = (features == null || features.isBlank())
                ? ""
                : features + "\n\n";
        String baseClass = modelClass + layerType + "Base";
        return String.format("""
                Generated %s layer stub for %s.%n\
                %s%n\
                %s%n\
                %n\
                %sYou are allowed to modify this file. It extends CrudCraft's abstract base (%s)%n\
                which already implements full CRUD logic.%n\
                %n\
                This file was generated only once. CrudCraft will not overwrite it in future%n\
                builds. If you delete it, it will be regenerated.%n\
                %n\
                %sGeneration context:%n\
                - Source model: %s%n\
                - Package: %s%n\
                - Generator: %s%n\
                - Generation time: %s%n\
                - CrudCraft version: %s%n\
                %n\
                Recommendations:%n\
                - You may customize method behavior, add validation, or extend with additional endpoints.%n\
                - Signature changes are allowed, but may desync from service or mapper layerâ€”proceed with care.%n\
                - Do not manually copy or paste other CrudCraft stubs into this class.%n\
                %n\
                Support: For file generation bugs or feedback, open an issue at%n\
                https://github.com/Data-Steel/CrudCraft/issues.%n\
                """,
                layerType, modelClass,
                MARKER_GENERATED, MARKER_EDITABLE,
                extra, baseClass, feat,
                modelClass, pkg, generatorClass, TIMESTAMP, VERSION
        );
    }

    /**
     * Generates a strict header for model classes that should not be edited.
     *
     * @param modelClass the name of the model class
     * @param pkg the package name
     * @param generatorClass the name of the generator class
     * @return a formatted header string
     */
    protected static String strictHeader(
            String modelClass,
            String pkg,
            String generatorClass
    ) {
        return strictHeader(modelClass, pkg, generatorClass, "", "");
    }

    /**
     * Generates a strict header for model classes that should not be edited,
     * with an extra paragraph.
     *
     * @param modelClass the name of the model class
     * @param pkg the package name
     * @param generatorClass the name of the generator class
     * @param extraParagraph additional information to include in the header
     * @return a formatted header string
     */
    protected static String strictHeader(
            String modelClass,
            String pkg,
            String generatorClass,
            String extraParagraph
    ) {
        return strictHeader(modelClass, pkg, generatorClass, extraParagraph, "");
    }

    /**
     * Generates a strict header for model classes that should not be edited,
     * with an extra paragraph and features.
     *
     * @param modelClass the name of the model class
     * @param pkg the package name
     * @param generatorClass the name of the generator class
     * @param extraParagraph additional information to include in the header
     * @param features features provided by CrudCraft for this model
     * @return a formatted header string
     */
    protected static String strictHeader(
            String modelClass,
            String pkg,
            String generatorClass,
            String extraParagraph,
            String features
    ) {
        String extra = (extraParagraph == null || extraParagraph.isBlank())
                ? ""
                : extraParagraph + "\n\n";
        String feat = (features == null || features.isBlank())
                ? ""
                : features + "\n\n";
        return String.format("""
                Generated model file for %s; do not edit manually.%n\
                %s%n\
                %n\
                %s%sGeneration context:%n\
                - Source model: %s%n\
                - Package: %s%n\
                - Generator: %s%n\
                - Generation time: %s%n\
                - CrudCraft version: %s%n\
                %n\
                To make changes, edit the entity model class and rebuild the project.%n\
                Do not edit or rename this file manually.%n\
                %n\
                Support: For file generation bugs or feedback, open an issue at%n\
                https://github.com/Data-Steel/CrudCraft/issues.%n\
                """,
                modelClass,
                MARKER_GENERATED,
                extra, feat,
                modelClass, pkg, generatorClass, TIMESTAMP, VERSION
        );
    }
}

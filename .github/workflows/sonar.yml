name: Sonar (CI + Quality Gate)

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  build:
    name: CI / build (for sonar)
    runs-on: ubuntu-latest
    permissions: { contents: read }
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
      - run: mvn -B -U verify

  sonar:
    name: Sonar / analyze
    needs: build
    if: >
      (github.event_name != 'pull_request')
      || (github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    permissions: { contents: read }
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
      - name: Analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io   # of je eigen SonarQube
        run: >
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=Data-Steel_CrudCraft
          -Dsonar.organization=datasteel
  quality-gate:
    name: Sonar / quality gate
    needs: sonar
    if: needs.sonar.result == 'success'
    runs-on: ubuntu-latest
    permissions: { contents: read }
    steps:
      - uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

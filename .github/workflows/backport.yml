name: backport

on:
  pull_request:
    types: [closed, labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  backport:
    # Run when the PR is merged AND has/gets a backport:<branch> label
    if: >
      (github.event.action == 'closed'  && github.event.pull_request.merged == true &&
       contains(join(github.event.pull_request.labels.*.name, ','), 'backport:')) ||
      (github.event.action == 'labeled' && github.event.pull_request.merged == true &&
       startsWith(github.event.label.name, 'backport:'))
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
      REPO: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Ensure gh is present
        run: gh --version

      - name: Configure git author
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Parse targets from labels (supports multiple)
        id: targets
        shell: bash
        run: |
          echo '${{ toJson(github.event.pull_request.labels) }}' > labels.json
          targets=$(jq -r '.[] | .name | select(startswith("backport:")) | sub("^backport:";"")' labels.json | paste -sd, -)
          echo "targets=$targets" >> $GITHUB_OUTPUT

      - name: Backport each target
        if: steps.targets.outputs.targets != ''
        shell: bash
        run: |
          IFS=, read -ra arr <<< "${{ steps.targets.outputs.targets }}"
          SRC_SHA='${{ github.event.pull_request.merge_commit_sha }}'
          for t in "${arr[@]}"; do
            echo "Backporting to $t"
            git fetch origin "$t"
            git switch -c "backport/${SRC_SHA:0:7}-to-${t//\//-}" "origin/$t"
            if git cherry-pick -x "$SRC_SHA"; then
              git push origin "backport/${SRC_SHA:0:7}-to-${t//\//-}"
              gh pr create --repo "$REPO" \
                --base "$t" \
                --head "backport/${SRC_SHA:0:7}-to-${t//\//-}" \
                --title "Backport #${{ github.event.pull_request.number }} to $t" \
                --body "Automated backport of #${{ github.event.pull_request.number }} to \`$t\`" \
                --label backport-auto
            else
              echo "::error::Cherry-pick conflict for $t"
              git cherry-pick --abort
              exit 1
            fi
          done

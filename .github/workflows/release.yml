name: Release to Maven Central

on:
  release:
    types: [published]
  push:
    tags: [ 'v*' ]

permissions:
  contents: read

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Publish to Maven Central
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      # Skip if triggered by tag push AND a GitHub Release already exists for this tag
      - name: Skip if release exists (tag push only)
        if: ${{ github.event_name == 'push' }}
        run: |
          if gh release view "${GITHUB_REF_NAME}" >/dev/null 2>&1; then
            echo "Release ${GITHUB_REF_NAME} already exists, skipping publish."
            exit 0
          fi

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Build exactly the released tag (release event) or the pushed tag (tag event)
          ref: ${{ github.event_name == 'release' && github.event.release.tag_name || github.ref_name }}

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
          gpg-private-key: ${{ secrets.SIGNING_KEY }}
          gpg-passphrase:  ${{ secrets.SIGNING_PASSWORD }}

      - name: Configure GPG for headless use
        run: |
          mkdir -p ~/.gnupg
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --kill gpg-agent

      - name: Export env for Central auth
        run: |
          echo "CENTRAL_USERNAME=${{ secrets.CENTRAL_USERNAME }}" >> $GITHUB_ENV
          echo "CENTRAL_PASSWORD=${{ secrets.CENTRAL_PASSWORD }}" >> $GITHUB_ENV

      - name: Write settings.xml (explicit)
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<'XML'
          <settings xmlns="http://maven.apache.org/SETTINGS/1.2.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">
            <servers>
              <server>
                <id>central</id>
                <username>${env.CENTRAL_USERNAME}</username>
                <password>${env.CENTRAL_PASSWORD}</password>
              </server>
            </servers>
          </settings>
          XML

      - name: Set version from tag (no -SNAPSHOT)
        run: |
          TAG="${{ github.event_name == 'release' && github.event.release.tag_name || github.ref_name }}"
          VERSION="${TAG#v}"
          mvn -B versions:set -DnewVersion="$VERSION" -DgenerateBackupPoms=false

      - name: Build, sign & deploy
        run: |
          mvn -B -U -P release \
            -pl '!crudcraft-sample-app' -am \
            -Dgpg.passphrase="${{ secrets.SIGNING_PASSWORD }}" \
            -Dgpg.executable=gpg \
            -DskipTests=false \
            -Dstyle.color=always \
            deploy

